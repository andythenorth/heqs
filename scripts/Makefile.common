.PHONY: clean mrproper test all depend bundle bundle_src bundle_zip bundle_tar bundle_bzip
.DEFAULT:

# Clean the source tree
clean:
	$(_E) "[Cleaning]"
	$(_V)-rm -rf *.orig *.pre *.bak *.grf *~
	$(_V)-rm -rf $(MAKEFILE_DEP) $(MAIN_TARGET) $(SRC_DIR)/*.nfo $(DOC_FILENAMES) $(REV_FILENAME)
	$(_V)-rm -rf $(CLEAN_ADD)

mrproper: clean
	$(_V)-rm -rf $(DIR_BASE)* $(SRC_DIR)/$(FILENAME_STUB) $(DIR_NAME_SRC)

# Print the output for a number of variables which define this newgrf.
test : 
	$(_E) "Call of nforenum:             $(NFORENUM) $(NFORENUM_FLAGS)"
	$(_E) "Call of grfcodec:             $(GRFCODEC) $(GRFCODEC_FLAGS)"
	$(_E) "Make:                         $(MAKE)"
	$(_E) "MD5sum:                       $(MD5SUM)"
	$(_E) "unix2dos:                     $(UNIX2DOS)"
	$(_E) "gcc:                          $(CC) $(CC_FLAGS)"
	$(_E) "zip:                          $(ZIP) $(ZIP_FLAGS)"
	$(_E) "bzip:                         $(BZIP) $(BZIP_FLAGS)"
	$(_E) "Local installation directory: $(INSTALL_DIR)"
	$(_E) "Repository revision:          r$(REPO_REVISION)"
	$(_E) "REPO title:                   $(REPO_TITLE)"
	$(_E) "Bundled files:                $(BUNDLE_FILES)"
	$(_E) "Bundle filenames:             Tar=$(TAR_FILENAME) Zip=$(ZIP_FILENAME) Bz2=$(BZIP_FILENAME)"
	$(_E) "Dirs (build/src/base):        $(DIR_NAME) / $(DIR_NAME_SRC) / $(DIR_BASE)"
	$(_E) "Source dirs:                  $(MAIN_DIRS)"
	$(_E) "Source extensions (RE):       $(FILE_SRC_RE)"
#	$(_E) "Bundle source files:          `for i in $(REPO_FILES); do for j in $(MAIN_DIRS); do echo "$$i" | grep "$$j"; done; done;`"
	$(_E) "Repository dirs:              $(REPO_DIRS)"
	$(_E) "VPATH:                        $(VPATH)"
#	$(_E) "Repository files:             $(REPO_FILES)"
	$(_E) "Makefile:                     $(MAKEFILE)"
ifeq ($(OSTYPE),Linux)
	$(_E) "Host type:                    $(OSTYPE) (Linux)"
else 
ifeq ($(OSTYPE),Darwin)
	$(_E) "Host type:                    $(OSTYPE) (Mac)"
else
ifeq ($(shell echo "$(OSTYPE)" | cut -d_ -f1),MINGW32)
	$(_E) "Host type:                    $(OSTYPE) (Win)"
else
	$(_E) "Host type:                    unknown (win?)"
endif
endif
endif

# The real targets which build the grf
%.grf: %.nfo
# pipe all nfo files through grfcodec and produce the grf(s)
	$(_E) "[Generating] $@"
	$(_V) $(GRFCODEC) ${GRFCODEC_FLAGS} $(notdir $@)

$(REV_FILENAME):
	$(_V) if [ -e $@ ]; then rm $@ ; fi
	$(_V) echo "$(BUILDFILENAME)" > $@

# .INTERMEDIATE: %.nfo
# .PRECIOUS: %.nfo
.SECONDARY: %.nfo

# Dependencies have to be added by a separate make dep step
%.nfo: $(REV_FILENAME) %.pnfo
# replace the place holders for version and name by the respective variables:
	$(_E) "[Generating] $@ with dep $^"
	$(_V) $(CC) $(CC_FLAGS) $(addsuffix .pnfo,$(basename $(NFO_DIR)/$(@F))) | \
		sed -e "s/$(GRF_ID_DUMMY)/$(GRF_ID)/" -e "s/$(REPO_TITLE_DUMMY)/$(REPO_TITLE)/" \
		-e "s/$(OUTPUT_FILENAME_DUMMY)/$(FILENAME)/" -e "s/$(REPO_REVISION_DUMMY)/$(REPO_REVISION)/" \
		> $(SRC_DIR)/$@ 
	$(_E) "[NFORENUM] $@"
	$(_V)-$(NFORENUM) ${NFORENUM_FLAGS} $@ 
	
%.txt: %.ptxt
	$(_E) "[Generating] $@"
	$(_V) $(UNIX2DOS) $< \
		| sed -e "s/$(REPO_TITLE_DUMMY)/$(REPO_TITLE)/" \
		| sed -e "s/$(GRF_ID_DUMMY)/$(GRF_ID)/" \
		| sed -e "s/$(REPO_REVISION_DUMMY)/$(REPO_REVISION)/" \
		| sed -e "s/$(OUTPUT_FILENAME_DUMMY)/$(OUTPUT_FILENAME)/" \
		> $@

# Create the dependencies
depend:
	$(_E) "[Generating] $(MAKEFILE_DEP)"
	$(_V) for i in `$(REPO_FILES_CMD) | grep -E '($(FILE_SRC_RE)grf)$$'`; do echo "$$i: "`for j in $(FILE_SRC_EXTENSIONS) $(FILE_INC_EXTENSIONS); do cat $$i |  grep -v '^//' | grep -o "[a-zA-Z0-9/_.-]\+\.$$j" | sort | uniq; done` | grep -v -E ": $$" ; done | sort | uniq | $(AWK) '{ print $$0"\n\t$$(_V) touch $$@" }' > $(MAKEFILE_DEP)
	