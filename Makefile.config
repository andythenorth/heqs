# Settings for the Makefile which define
# various things like the names, paths, etc pp
#
################################################################
# Displayed name and filename
################################################################
# The displayed name of the newgrf. Replace the name string
# in action 08 by {{GRF_NAME}}
GRF_NAME        = HEQS (Heavy Equipment Set)
GRF_ID          = \"AP\" 12 01
# The filename of the GRF (without extension)
# The file which contains a list of all relevant (p)nfo files
# has to bear this name followed by the pnfo_suffix
# e.g. firs.pnfo
# This file resides in the specified nfo dir (see below)
FILENAME        = heqs
PNFO_SUFFIX     = pnfo
# Filename part which indicates the development tar
GRF_NIGHTLYNAME = nightly

GRF_TITLE_DUMMY = {{GRF_TITLE}}
GRF_ID_DUMMY    = {{GRF_ID}}

################################################################
#suffixes of the files used
################################################################
# Suffix of the pre-processed nfo file:
# usually not relevant, but should be different:
CPNFO_SUFFIX = cpnfo

# other relevant extensions. Normally it's not necessary to edit these
NFO_SUFFIX = nfo
GRF_SUFFIX = grf
TAR_SUFFIX = tar
BZ2_SUFFIX = bz2
ZIP_SUFFIX = zip
PCX_SUFFIX = pcx
REV_SUFFIX = rev

################################################################
# Programme definitions / search paths
################################################################
# Build parameters and programmes
NFORENUM_FLAGS = -w 144,141
GRFCODEC_FLAGS = -e -p 2
TAR_FLAGS      = cf
ZIP_FLAGS      = -r
BZIP_FLAGS     = -k9f
CC_FLAGS       = -E - <

NFORENUM = renum
GRFCODEC = grfcodec
TAR      = tar
ZIP      = zip
BZIP     = bzip2
CC       = gcc
# Macs have a different md5 command than linux or mingw envirnoment:
ifeq ($(OSTYPE),Darwin)
MD5SUM   = md5 -r
else
MD5SUM   = md5sum
endif


################################################################
# Paths defining the directory layout
################################################################

# Paths defining the directory layout
# directory containing the sprites (pnfo and pcx files)
#
# Generally the structure is expected to look like this
# <main>
# |-sprites
# | |-nfo
# | | |-header.pnfo
# | | |-subdir
# | | | |-somefile.pnfo
# | | |-langdir
# | | | |-english.pnfo
# | | |-firs.pnfo  <--- the main file (source list)
# | |-pcx
# |   |-images.pcx
# |   |-subdir
# |     |-somefile.pcx
# |-docdir
# | |-readme.txt
# | |-license.txt
# | |-changelog.txt
# |-website
# |-scripts
# |-Makefile
# |-Makefile.config

SPRITEDIR   = sprites
# directory containing your documentation
DOCDIR      = docs
# directory containing your website
WEBDIR      = website
# directory containing the pnfo files (sub dir of spritedir?)
NFODIR      = $(SPRITEDIR)/nfo
MAINDIRS    = $(SPRITEDIR) $(DOCDIR) $(WEBDIR)

################################################################
# Filenames which comprise the grf
################################################################
# All files which comprise the grf go as '#include "path/to/filename"
# into the main file, $(FILENAME).pnfo (e.g. sprites/nfo/firs.pnfo)
# The path to the PCX files still needs to be given here

# Documentation files with relative path. Usually they should be in $(DOCDIR).
LICENSEFILE = $(DOCDIR)/license.txt
READMEFILE  = $(DOCDIR)/readme.txt
# CHANGELOG   = $(DOCDIR)/changelog.txt

DOCUMENTATION = $(LICENSEFILE) $(READMEFILE)

################################################################
# Rules on how to generate filenames. Usually no need to change
################################################################
# Define how the displayed name and the filename of the bundled grf shall look like:
# The result will either be
# nightly build:                   mynewgrf-nightly-r51
# a release build (tagged version): mynewgrf-0.1
# followed by an M, if the source repository is not a clean version.
# Define how the displayed name and the filename of the bundled grf shall look like:
DIR_BASE      = $(FILENAME)-
BUILDFILENAME = $(DIR_BASE)$(shell [ -n "$(REPO_TAGS)" ] && echo $(REPO_TAGS)$(GRF_MODIFIED) || echo $(GRF_NIGHTLYNAME)-r$(GRF_REVISION)$(GRF_MODIFIED))
DIR_NIGHTLY   = $(DIR_BASE)$(GRF_NIGHTLYNAME)
DIR_RELEASE   = $(BUILDFILENAME)

TAR_FILENAME   = $(DIR_NIGHTLY).$(TAR_SUFFIX)
BZIP_FILENAME  = $(TAR_FILENAME).$(BZ2_SUFFIX)
ZIP_FILENAME   = $(BUILDFILENAME).$(ZIP_SUFFIX)
NFO_FILENAME   = $(SPRITEDIR)/$(addsuffix .$(NFO_SUFFIX),$(FILENAME))
PNFO_FILENAME  = $(NFODIR)/$(FILENAME).$(PNFO_SUFFIX)
CPNFO_FILENAME = $(SPRITEDIR)/$(addsuffix .$(CPNFO_SUFFIX),$(FILENAME))
GRF_FILENAME   = $(addsuffix .$(GRF_SUFFIX),$(FILENAME))
REV_FILENAME   = $(BUILDFILENAME).$(REV_SUFFIX)

# Files to include in a release (e.g. to pack into tar, zip, files)
BUNDLE_FILES  = $(GRF_FILENAME) $(DOCUMENTATION)

################################################################
# the displayed name within OpenTTD / TTDPatch
################################################################
# Looks like either
# a nightly build:                 GRF's Name nightly-r51
# a release build (taged version): GRF's Name 0.1
GRF_TITLE    = $(GRF_NAME) $(shell [ -n "$(REPO_TAGS)" ] && echo $(REPO_TAGS)$(GRF_MODIFIED) || echo $(GRF_NIGHTLYNAME)-r$(GRF_REVISION)$(GRF_MODIFIED))

# Remove the @ when you want a more verbose output.
V        := @
