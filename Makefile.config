# Settings for the Makefile which define
# various things like the names, paths, etc pp
#
# 

# The displayed name of the newgrf. Replace the name string
# in action 08 by {{GRF_NAME}}
GRF_NAME        = Heavy Equipment Road vehilces Set
# The filename of the GRF (without extension)
FILENAME        = heqs
# Description of the newgrf. Can be in header.pnfo, too
# GRF_DESCRIPTION = my nice and lenghty description

# the filename of the bundle for none-release builds
GRF_NIGHTLYNAME = nightly

NAME 	        = $(FILENAME)

#suffixes of the files used
#Name your nfo source files which you edit *.pnfo
NFO_SUFFIX = nfo
GRF_SUFFIX = grf
PNFO_SUFFIX = pnfo

# Build parameters and programmes
NFORENUM_FLAGS = -w 141
GRFCODEC_FLAGS = -e -p 2
TAR_FLAGS      = cf
ZIP_FLAGS      = -9f
BZIP_FLAGS     = -k9f

NFORENUM = renum
GRFCODEC = grfcodec
TAR      = tar
ZIP      = gzip
BZIP     = bzip2

# Paths defining the directory layout
SPRITEDIR   = sprites
DOCDIR      = doc
WEBDIR      = website
NFODIR      = $(SPRITEDIR)
MAINDIRS    = $(SPRITEDIR) $(DOCDIR) $(WEBDIR)

# Now come the definitions of the files which comprise the newgrf:
# Filenames to include in the grf in sprites/nfo
# HEADER goes first, FOOTER goes last. The others are 
# placed behind header and before engines and language files.
HEADER      = heqs_header.pnfo
OTHERS      = 
FOOTER      = 

# Names of the subdirectories where all *.pnfo files will be used, too
# these directories are relative to sprites/nfo
# These files will be inserted before the footer
SUB_DIRS = dir1 dir2 dire3

# The language directory. All nfo files from there will be
# put into the final grf. It is relative to sprites/nfo
# These files will be inserted before the footer
LANG_DIR    = lang


# Define how the displayed name and the filename of the bundled grf shall look like:
# The result will either be
# nightly build:                   mynewgrf-nightly-r51
# a release build (taged version): mynewgrf-0.1
# followed by an M, if the source repository is not a clean version.
GRF_BUILDNAME= $(shell [ -n "$(REPO_TAGS)" ] && echo $(REPO_TAGS)$(GRF_MODIFIED) || echo $(GRF_NIGHTLYNAME)-r$(GRF_REVISION)$(GRF_MODIFIED))
BUILDFILENAME = $(FILENAME)-$(GRF_BUILDNAME)

# some dependent files, like the name of the created archives. No need to change these.
TAR_FILENAME  = $(BUILDFILENAME).tar
BZIP_FILENAME = $(BUILDFILENAME).bz2
ZIP_FILENAME  = $(BUILDFILENAME).zip
NFO_FILENAME  = $(SPRITEDIR)/$(addsuffix .$(NFO_SUFFIX), $(FILENAME))
PNFO_FILENAME = $(SPRITEDIR)/$(addsuffix .$(PNFO_SUFFIX),$(FILENAME))
GRF_FILENAME  = $(addsuffix .$(GRF_SUFFIX), $(FILENAME))

# Files to include in a release which you want to ship to the people
BUNDLE_FILES  = $(GRF_FILENAME) 

# define the files with a full relative path name to this directory
HEADER_FILE   = $(NFODIR)/$(HEADER)
FOOTER_FILE   = $(NFODIR)/$(FOOTER)
OTHER_FILES   = $(addprefix $(NFODIR)/,$(OTHERS))
# list of files in language directory
LANG_FILES    = $(wildcard $(NFODIR)/$(LANG_DIR)/*.$(PNFO_SUFFIX))
# list of files in subdirectories. Don't change it
SUB_FILES     = $(foreach dir,$(SUB_DIRS),$(wildcard $(NFODIR)/$(dir)/*.$(PNFO_SUFFIX)))

# the displayed name within OpenTTD / TTDPatch
# Looks like either
# a nightly build:                 GRF's Name nightly-r51
# a release build (taged version): GRF's Name 0.1
GRF_TITLE    = $(GRF_NAME) $(GRF_BUILDNAME)

